--- Initial checks

@WORDLIST.recommend(/usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt)
@WORDLIST.recommend(/usr/share/wordlists/dirb/common.txt)
@WORDLIST.recommend(/usr/share/wordlists/dirb/big.txt)
@WORDLIST.recommend(/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt)

# desc: [Check]
robots, sitemap, 404 error and SSL/TLS scan (if HTTPS).
# /robots.txt
# /sitemap.xml
# Some 404 error - Some interesting data could be presented here.

# desc: [Check]
# refer: https://book.hacktricks.xyz/pentesting/pentesting-web#check-if-you-can-upload-files-put-verb-webdav
# refer: https://book.hacktricks.xyz/brute-force#http-basic-auth
Check if you can upload files

# desc: SSL/TLS vulnerabilites
# refer: https://github.com/drwetter/testssl.sh
./testssl.sh #{save_output} #{RHOST}:443
@save_output.desc(save the output inside an htmlfile also)
@save_output.recommed(--htmlfile)

# desc: SSL/TLS vulnerabilites
# refer: https://github.com/hahwul/a2sv
python a2sv.py -t #{RHOST}

--- spidering


# refer: https://github.com/Nekmo/dirhunt
dirhunt #{RHOST}

# refer: https://github.com/saeeddhqan/evine
./evine -url #{RHOST}

# refer: https://github.com/jaeles-project/gospider
gospider -s #{RHOST} --depth 3 --no-redirect -t 50 0c 3 -o gospider_output.txt

# refer: https://github.com/devanshbatham/ParamSpider
python3 paramspider.py --domain #{RHOST} --level high --output paramspider_output.txt

# refer: https://book.hacktricks.xyz/pentesting/pentesting-web#spidering
# desc: [INFO]
More tools

--- Brute Force directories and files

# refer: https://github.com/maurosoria/dirsearch
./dirsearch.py -u #{RHOST} -f -e #{extensions} --simple-report=dirsearch_output.txt
@extensions.recommend(php,html)
@extensions.recommend(asp)

# refer: https://github.com/epi052/feroxbuster
# desc: Fast Cool
feroxbuster -u #{RHOST} --depth 3 --wordlist #{WORDLIST}

# refer: https://github.com/OJ/gobuster
gobuster dir -u #{RHOST} #{[-c ']cookie[']}-w #{WORDLIST}
@cookie.desc(Cookie string)

# refer: https://github.com/ffuf/ffuf
# desc: Fast
ffuf -c -w #{WORDLIST} -u #{RHOST}

# refer: https://github.com/xmendez/wfuzz
wfuzz -w #{WORDLIST} #{RHOST}

# refer:https://book.hacktricks.xyz/pentesting/pentesting-web#brute-force-directories-and-files
# desc: [INFO]
More tools

# desc: [INFO]
# refer: https://wordlists.assetnote.io/ (Recommend Dictionary)
# refer: https://github.com/danielmiessler/RobotsDisallowed (Recommend Use curated.txt)
# refer: http://gist.github.com/jhaddix/b80ea67d85c13206125806f0828f4d10 (Recommend Dictionary)
Recommended Dictionaries

--- What to check on each file found

# desc: Broken link checker
# refer: https://github.com/stevenvachon/broken-link-checker
# Find broken links inside HTMLs that may be prone to takeovers
blc #{RHOST} -ro

# desc: [Check]
# file.ext~, #file.ext#, ~file.ext, file.ext.bak, file.ext.tmp, file.ext.old, file.bak, file.tmp and file.old
Check File Backups

# desc: Discover new parameters
# refer: https://github.com/s0md3v/Arjun/wiki/Usage#scan-a-single-url
arjun -u #{RHOST}

# desc: Discover new parameters
# refer: https://github.com/maK-/parameth
parameth.py -u #{RHOST}

# desc: [Check]
Comments
# Check the comments of all the files, you can find credentials or hidden functionality.

# desc: [Check]
API keys
# If you find any API key there is guide that indicates how to use API keys of different platforms: keyhacks, zile, truffleHog, SecretFinder, RegHex
# refer: https://github.com/streaak/keyhacks
# refer: https://github.com/xyele/zile.git
# refer: https://github.com/dxa4481/truffleHog
# refer: https://github.com/m4ll0k/SecretFinder
# refer: https://github.com/l4yton/RegHex

--- Special findings

# refer: https://book.hacktricks.xyz/pentesting/pentesting-web#special-findings
# desc: [INFO]
Special findings

# refer: https://book.hacktricks.xyz/pentesting/pentesting-web#interesting-files
# desc: [Check]
Interesting files

# refer: https://book.hacktricks.xyz/pentesting/pentesting-web#403-forbidden-basic-authentication-401-unauthorized-bypass
# desc: [Check]
403 Forbidden/Basic Authentication/401 Unauthorized (bypass)

# refer: https://book.hacktricks.xyz/pentesting/pentesting-web#502-proxy-error
# desc: [Check]
502 Proxy Error
# If any page responds with that code, it's probably a bad configured proxy. If you send a HTTP request like: GET https://google.com HTTP/1.1 (with the host header and other common headers), the proxy will try to access google.com and you will have found a SSRF.

--- User input vulnerabilites

# desc: [INFO]
# refer: https://book.hacktricks.xyz/pentesting/pentesting-web#user-input-related-vulnerabilities-special-mention
Bypass regular login (POST or GET method)

# desc: [INFO]
# refer: https://book.hacktricks.xyz/pentesting/pentesting-web#user-input-web-vulnerabilities-list
User input Web Vulnerabilities list