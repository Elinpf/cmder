--- Users

# desc: Get users with several (not all) properties
Get-NetUser 

# desc: List all usernames
Get-NetUser | select -ExpandProperty samaccountname 

# desc: Get info about a user
Get-NetUser -UserName student107 

# desc: Get all descriptions
Get-NetUser -properties name, description 

# desc: Get all pwdlastset, logoncount and badpwdcount
Get-NetUser -properties name, pwdlastset, logoncount, badpwdcount  

# desc: Search account with "something" in a parameter
Find-UserField -SearchField Description -SearchTerm "built" 

--- Users Filters
# desc: All enabled users
Get-NetUser -UACFilter NOT_ACCOUNTDISABLE -properties distinguishedname 

# desc: All disabled users
Get-NetUser -UACFilter ACCOUNTDISABLE 

# desc: Users that require a smart card
Get-NetUser -UACFilter SMARTCARD_REQUIRED 

# desc: Not smart card users
Get-NetUser -UACFilter NOT_SMARTCARD_REQUIRED -Properties samaccountname 

# desc: Find users with sidHistory set
Get-NetUser -LDAPFilter '(sidHistory=*)' 

# desc: ASREPRoastable users
Get-NetUser -PreauthNotRequired 

# desc: Kerberoastable users
Get-NetUser -SPN | select serviceprincipalname 

# desc: Domain admins kerberostable
Get-NetUser -SPN | ?{$_.memberof -match 'Domain Admins'} 

# desc: Useful for Kerberos constrain delegation
Get-Netuser -TrustedToAuth 

# desc: All privileged users that aren't marked as sensitive/not for delegation
Get-NetUser -AllowDelegation -AdminCount 

# desc:  retrieve *most* users who can perform DC replication for dev.testlab.local (i.e. DCsync)
Get-ObjectAcl "dc=dev,dc=testlab,dc=local" -ResolveGUIDs | ? {
    ($_.ObjectType -match 'replication-get') -or ($_.ActiveDirectoryRights -match 'GenericAll')
}

--- Groups

# desc: Get groups
Get-NetGroup 

# desc: Get groups of an specific domain
Get-NetGroup -Domain mydomain.local 

# desc: Get all data of a group
Get-NetGroup 'Domain Admins' 

# desc: Search admin grups
Get-NetGroup -AdminCount 

# desc: Get groups of a user
Get-NetGroup -UserName "myusername" 

# desc: Get users inside "Administrators" group. If there are groups inside of this grup, the -Recurse option will print the users inside the others groups also
Get-NetGroupMember -Identity "Administrators" -Recurse 

# desc: Remember that "Enterprise Admins" group only exists in the rootdomain of the forest
Get-NetGroupMember -Identity "Enterprise Admins" -Domain mydomain.local 

# desc: Get Local groups of a machine (you need admin rights in no DC hosts)
Get-NetLocalGroup -ComputerName dc.mydomain.local -ListGroups 

# desc: Get users of localgroups in computer
Get-NetLocalGroupMember -computername dcorp-dc.dollarcorp.moneycorp.local 

# desc: Check AdminSDHolder users
Get-DomainObjectAcl -SearchBase 'CN=AdminSDHolder,CN=System,DC=testlab,DC=local' -ResolveGUIDs 

# desc: Get restricted groups
Get-NetGPOGroup 


--- Computers

# desc: Get all computer objects
Get-NetComputer 

# desc: Send a ping to check if the computers are working
Get-NetComputer -Ping 

# desc: DCs always appear but aren't useful for privesc
Get-NetComputer -Unconstrained 

# desc: Find computers with Constrined Delegation
Get-NetComputer -TrustedToAuth 

# desc: Find any machine accounts in privileged groups
Get-DomainGroup -AdminCount | Get-DomainGroupMember -Recurse | ?{$_.MemberName -like '*$'} 